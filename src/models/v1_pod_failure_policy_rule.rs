/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.31.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1PodFailurePolicyRule : PodFailurePolicyRule describes how a pod failure is handled when the requirements are met. One of onExitCodes and onPodConditions, but not both, can be used in each rule.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1PodFailurePolicyRule {
    /// Specifies the action taken on a pod failure when the requirements are satisfied. Possible values are:  - FailJob: indicates that the pod's job is marked as Failed and all   running pods are terminated. - FailIndex: indicates that the pod's index is marked as Failed and will   not be restarted.   This value is beta-level. It can be used when the   `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default). - Ignore: indicates that the counter towards the .backoffLimit is not   incremented and a replacement pod is created. - Count: indicates that the pod is handled in the default way - the   counter towards the .backoffLimit is incremented. Additional values are considered to be added in the future. Clients should react to an unknown action by skipping the rule.
    #[serde(rename = "action")]
    pub action: String,
    #[serde(rename = "onExitCodes", skip_serializing_if = "Option::is_none")]
    pub on_exit_codes: Option<Box<crate::models::V1PodFailurePolicyOnExitCodesRequirement>>,
    /// Represents the requirement on the pod conditions. The requirement is represented as a list of pod condition patterns. The requirement is satisfied if at least one pattern matches an actual pod condition. At most 20 elements are allowed.
    #[serde(rename = "onPodConditions", skip_serializing_if = "Option::is_none")]
    pub on_pod_conditions: Option<Vec<crate::models::V1PodFailurePolicyOnPodConditionsPattern>>,
}

impl V1PodFailurePolicyRule {
    /// PodFailurePolicyRule describes how a pod failure is handled when the requirements are met. One of onExitCodes and onPodConditions, but not both, can be used in each rule.
    pub fn new(action: String) -> V1PodFailurePolicyRule {
        V1PodFailurePolicyRule {
            action,
            on_exit_codes: None,
            on_pod_conditions: None,
        }
    }
}


