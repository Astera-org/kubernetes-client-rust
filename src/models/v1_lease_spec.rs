/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.31.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1LeaseSpec : LeaseSpec is a specification of a Lease.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1LeaseSpec {
    /// acquireTime is a time when the current lease was acquired.
    #[serde(rename = "acquireTime", skip_serializing_if = "Option::is_none")]
    pub acquire_time: Option<String>,
    /// holderIdentity contains the identity of the holder of a current lease. If Coordinated Leader Election is used, the holder identity must be equal to the elected LeaseCandidate.metadata.name field.
    #[serde(rename = "holderIdentity", skip_serializing_if = "Option::is_none")]
    pub holder_identity: Option<String>,
    /// leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measured against the time of last observed renewTime.
    #[serde(rename = "leaseDurationSeconds", skip_serializing_if = "Option::is_none")]
    pub lease_duration_seconds: Option<i32>,
    /// leaseTransitions is the number of transitions of a lease between holders.
    #[serde(rename = "leaseTransitions", skip_serializing_if = "Option::is_none")]
    pub lease_transitions: Option<i32>,
    /// PreferredHolder signals to a lease holder that the lease has a more optimal holder and should be given up. This field can only be set if Strategy is also set.
    #[serde(rename = "preferredHolder", skip_serializing_if = "Option::is_none")]
    pub preferred_holder: Option<String>,
    /// renewTime is a time when the current holder of a lease has last updated the lease.
    #[serde(rename = "renewTime", skip_serializing_if = "Option::is_none")]
    pub renew_time: Option<String>,
    /// Strategy indicates the strategy for picking the leader for coordinated leader election. If the field is not specified, there is no active coordination for this lease. (Alpha) Using this field requires the CoordinatedLeaderElection feature gate to be enabled.
    #[serde(rename = "strategy", skip_serializing_if = "Option::is_none")]
    pub strategy: Option<String>,
}

impl V1LeaseSpec {
    /// LeaseSpec is a specification of a Lease.
    pub fn new() -> V1LeaseSpec {
        V1LeaseSpec {
            acquire_time: None,
            holder_identity: None,
            lease_duration_seconds: None,
            lease_transitions: None,
            preferred_holder: None,
            renew_time: None,
            strategy: None,
        }
    }
}


