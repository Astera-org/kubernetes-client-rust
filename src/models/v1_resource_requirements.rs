/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.31.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1ResourceRequirements : ResourceRequirements describes the compute resource requirements.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1ResourceRequirements {
    /// Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.  This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.  This field is immutable. It can only be set for containers.
    #[serde(rename = "claims", skip_serializing_if = "Option::is_none")]
    pub claims: Option<Vec<crate::models::V1ResourceClaim>>,
    /// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    #[serde(rename = "limits", skip_serializing_if = "Option::is_none")]
    pub limits: Option<::std::collections::HashMap<String, String>>,
    /// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    #[serde(rename = "requests", skip_serializing_if = "Option::is_none")]
    pub requests: Option<::std::collections::HashMap<String, String>>,
}

impl V1ResourceRequirements {
    /// ResourceRequirements describes the compute resource requirements.
    pub fn new() -> V1ResourceRequirements {
        V1ResourceRequirements {
            claims: None,
            limits: None,
            requests: None,
        }
    }
}


