/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.31.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1alpha3DeviceClaim : DeviceClaim defines how to request devices with a ResourceClaim.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1alpha3DeviceClaim {
    /// This field holds configuration for multiple potential drivers which could satisfy requests in this claim. It is ignored while allocating the claim.
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<Vec<crate::models::V1alpha3DeviceClaimConfiguration>>,
    /// These constraints must be satisfied by the set of devices that get allocated for the claim.
    #[serde(rename = "constraints", skip_serializing_if = "Option::is_none")]
    pub constraints: Option<Vec<crate::models::V1alpha3DeviceConstraint>>,
    /// Requests represent individual requests for distinct devices which must all be satisfied. If empty, nothing needs to be allocated.
    #[serde(rename = "requests", skip_serializing_if = "Option::is_none")]
    pub requests: Option<Vec<crate::models::V1alpha3DeviceRequest>>,
}

impl V1alpha3DeviceClaim {
    /// DeviceClaim defines how to request devices with a ResourceClaim.
    pub fn new() -> V1alpha3DeviceClaim {
        V1alpha3DeviceClaim {
            config: None,
            constraints: None,
            requests: None,
        }
    }
}


