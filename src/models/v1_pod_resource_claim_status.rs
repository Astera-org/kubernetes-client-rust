/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.31.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1PodResourceClaimStatus : PodResourceClaimStatus is stored in the PodStatus for each PodResourceClaim which references a ResourceClaimTemplate. It stores the generated name for the corresponding ResourceClaim.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1PodResourceClaimStatus {
    /// Name uniquely identifies this resource claim inside the pod. This must match the name of an entry in pod.spec.resourceClaims, which implies that the string must be a DNS_LABEL.
    #[serde(rename = "name")]
    pub name: String,
    /// ResourceClaimName is the name of the ResourceClaim that was generated for the Pod in the namespace of the Pod. If this is unset, then generating a ResourceClaim was not necessary. The pod.spec.resourceClaims entry can be ignored in this case.
    #[serde(rename = "resourceClaimName", skip_serializing_if = "Option::is_none")]
    pub resource_claim_name: Option<String>,
}

impl V1PodResourceClaimStatus {
    /// PodResourceClaimStatus is stored in the PodStatus for each PodResourceClaim which references a ResourceClaimTemplate. It stores the generated name for the corresponding ResourceClaim.
    pub fn new(name: String) -> V1PodResourceClaimStatus {
        V1PodResourceClaimStatus {
            name,
            resource_claim_name: None,
        }
    }
}


