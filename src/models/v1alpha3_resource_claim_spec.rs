/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.31.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1alpha3ResourceClaimSpec : ResourceClaimSpec defines what is being requested in a ResourceClaim and how to configure it.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1alpha3ResourceClaimSpec {
    /// Controller is the name of the DRA driver that is meant to handle allocation of this claim. If empty, allocation is handled by the scheduler while scheduling a pod.  Must be a DNS subdomain and should end with a DNS domain owned by the vendor of the driver.  This is an alpha field and requires enabling the DRAControlPlaneController feature gate.
    #[serde(rename = "controller", skip_serializing_if = "Option::is_none")]
    pub controller: Option<String>,
    #[serde(rename = "devices", skip_serializing_if = "Option::is_none")]
    pub devices: Option<Box<crate::models::V1alpha3DeviceClaim>>,
}

impl V1alpha3ResourceClaimSpec {
    /// ResourceClaimSpec defines what is being requested in a ResourceClaim and how to configure it.
    pub fn new() -> V1alpha3ResourceClaimSpec {
        V1alpha3ResourceClaimSpec {
            controller: None,
            devices: None,
        }
    }
}


