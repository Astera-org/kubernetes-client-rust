/*
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.31.3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// V1alpha3DeviceClassSpec : DeviceClassSpec is used in a [DeviceClass] to define what can be allocated and how to configure it.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1alpha3DeviceClassSpec {
    /// Config defines configuration parameters that apply to each device that is claimed via this class. Some classses may potentially be satisfied by multiple drivers, so each instance of a vendor configuration applies to exactly one driver.  They are passed to the driver, but are not considered while allocating the claim.
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<Vec<crate::models::V1alpha3DeviceClassConfiguration>>,
    /// Each selector must be satisfied by a device which is claimed via this class.
    #[serde(rename = "selectors", skip_serializing_if = "Option::is_none")]
    pub selectors: Option<Vec<crate::models::V1alpha3DeviceSelector>>,
    #[serde(rename = "suitableNodes", skip_serializing_if = "Option::is_none")]
    pub suitable_nodes: Option<Box<crate::models::V1NodeSelector>>,
}

impl V1alpha3DeviceClassSpec {
    /// DeviceClassSpec is used in a [DeviceClass] to define what can be allocated and how to configure it.
    pub fn new() -> V1alpha3DeviceClassSpec {
        V1alpha3DeviceClassSpec {
            config: None,
            selectors: None,
            suitable_nodes: None,
        }
    }
}


